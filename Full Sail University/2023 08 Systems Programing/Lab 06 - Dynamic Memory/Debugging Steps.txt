Write your debugging steps and thought process here (This is part of your grade)
Ran program and memory leak was showing 1020
I then set #define MEMORY_LEAK_LINE to 500 which resulted in a list of memory leak errors. 
I selected the first error and set MEMORY_LEAK_LINE to 155 clicked the stack errors 
and it called out several errors but the one that caught my attention first was Store* s = new Store();
I added delete s; at the end of Main and ran program again set to 158 and checked the stack.
Saw the next error Store::Store()
Has a constructor but no deconstructor so added Store::~Store() and deleted delete[] m_Inventories; inside the deconstructor
Memory leak down to 780 so then set MEMORY_LEAK_LINE to 158 and then added delete helperItem; into Store::Store()
Memory leak down to 716 commented out Item::Item m_Value duplicate line. Bringing the memory leak to 676.
Noticed nSize in inventory didn't have a delete when browsing around so added delete nSize;
memory leak down to 652
added deconstructor for Item::Item in Item.cpp and Item.h
memory leak down to 648
Added delete value; to Item.ccp under Item::Print
memory leak down to 612
At this point I got concerned about there being an Inventory.h file but no Inventory.cpp file.
So I created a Inventory.cpp file and split the Inventory.h into it's proper places. I then added Inventory::~Inventory
These two changes brought the memory leak to 0 